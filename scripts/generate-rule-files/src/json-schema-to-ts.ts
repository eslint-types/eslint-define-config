import type { JSONSchema4 } from 'json-schema';
import { compile } from 'json-schema-to-typescript';

/**
 * Remove unnecessary comments that are generated by `json-schema-to-typescript`.
 */
function cleanJsDoc(content: string): string {
  const patterns: RegExp[] = [
    /\* This interface was referenced by .+ JSON-Schema definition/,
    /\* via the `.+` "/,
  ];

  return content
    .split('\n')
    .filter((line) => !patterns.some((ignoredLine) => ignoredLine.test(line)))
    .join('\n');
}

/**
 * Generate a type from the given JSON schema.
 */
export async function generateTypeFromSchema(
  schema: JSONSchema4,
  typeName: string,
): Promise<string> {
  const result: string = await compile(schema, typeName, {
    format: false,
    bannerComment: '',
    style: {
      singleQuote: true,
      trailingComma: 'all',
    },
    unknownAny: false,
  });

  return cleanJsDoc(result);
}
