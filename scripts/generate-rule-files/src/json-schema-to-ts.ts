import type { JSONSchema4 } from 'json-schema';
import { compile } from 'json-schema-to-typescript';

/**
 * Remove some comments that are generated by json-schema-to-typescript
 * and that we don't need
 */
function removeGarbageFromJsDocs(content: string): string {
  const patterns = [
    /\* This interface was referenced by .+ JSON-Schema definition/,
    /\* via the `.+` "/,
  ];

  return content
    .split('\n')
    .filter((line) => !patterns.some((ignoredLine) => ignoredLine.test(line)))
    .join('\n');
}

/**
 * Generate a type from the given JSON schema
 */
export async function generateTypeFromSchema(
  schema: JSONSchema4,
  typeName: string,
): Promise<string> {
  const result = await compile(schema, typeName, {
    bannerComment: '',
    style: { singleQuote: true, trailingComma: 'all' },
    unknownAny: false,
  });

  return removeGarbageFromJsDocs(result);
}
